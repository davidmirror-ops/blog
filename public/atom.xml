<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title type="text">David Espejo&#39;s notes</title>
    <subtitle type="html">MemE is a powerful and highly customizable GoHugo theme for personal blogs.</subtitle>
    <updated>2023-06-01T05:24:26-05:00</updated>
    <id>http://www.davidmirror.dev/</id>
    <link rel="alternate" type="text/html" href="http://www.davidmirror.dev/" />
    <link rel="self" type="application/atom&#43;xml" href="http://www.davidmirror.dev/atom.xml" />
    <author>
            <name>David Espejo</name>
            <uri>http://www.davidmirror.dev/</uri>
            
                <email>espejo.david@gmail.com</email>
            </author>
    <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights>
    <generator uri="https://gohugo.io/" version="0.111.3">Hugo</generator>
        <entry>
            <title type="text">Intro to Helm</title>
            <link rel="alternate" type="text/html" href="http://www.davidmirror.dev/posts/intro-to-helm/" />
            <id>http://www.davidmirror.dev/posts/intro-to-helm/</id>
            <updated>2023-06-01T05:23:57-05:00</updated>
            <published>2023-05-29T05:24:08-05:00</published>
            <author>
                    <name>David Espejo</name>
                    <uri>http://www.davidmirror.dev/</uri>
                    <email>espejo.david@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html">Helm is the most popular and almost de-facto package manager for Kubernetes. In this post I summarize what I learned after reading Learning Helm, written by some of the Helm maintainers.
To be honest, the first time I heard about &amp;ldquo;package management&amp;rdquo; for Kubernetes, I was a bit confused.</summary>
            
                <content type="html">&lt;p&gt;Helm is the most popular and almost &lt;em&gt;de-facto&lt;/em&gt; package manager for Kubernetes. In this post I summarize what I learned after reading &lt;em&gt;&lt;a href=&#34;https://www.oreilly.com/library/view/learning-helm/9781492083641/&#34;&gt;Learning Helm&lt;/a&gt;&lt;/em&gt;, written by some of the Helm maintainers.&lt;/p&gt;
&lt;p&gt;To be honest, the first time I heard about &amp;ldquo;package management&amp;rdquo; for Kubernetes, I was a bit confused. The term is familiar to me for operating systems (i.e. &lt;code&gt;apt&lt;/code&gt; for Ubuntu or &lt;code&gt;yum&lt;/code&gt; for RHEL/CentOS), but I wasn&amp;rsquo;t sure what was the meaning in a Kubernetes context.&lt;/p&gt;
&lt;p&gt;In Helm, a &amp;ldquo;package&amp;rdquo; contains the application and all the K8s resources it requires to operate. It could be a Deployment, ReplicaSet, Service, Ingress, Secrets, etc. The the goal of package management in Kubernetes is to simplify the definition of these requirements , and automate their lifecycle while keeping its declarative nature.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Chart&lt;/strong&gt; is the main Helm construct and it declares the way an application should be installed on a Kubernetes cluster. To apply what&amp;rsquo;s in declarative config, a set of files and directories are also part of the chart and describe the resources to be installed on K8s.&lt;/p&gt;
&lt;p&gt;Charts are stored in repositories (be them local or remote). You just need to add the repo to your local Helm installation and then reference it when needed:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;helm repo add bitnami &amp;lt;https://charts.bitnami.com/bitnami&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;Bitnami is a popular service hosting a number of Helm charts&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;And then&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;helm install web bitnami/wordpress --dry-run
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Where&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Web&lt;/code&gt; is the &lt;strong&gt;release name&lt;/strong&gt;. This is the &lt;em&gt;package&lt;/em&gt; name or the set of Kubernetes resources configured and managed by Helm. It is user-defined and it&amp;rsquo;s typically used as part of the name of every K8s resource that Helm creates.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bitnami/wordpress&lt;/code&gt; the repo and the specific chart to install&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dry-run&lt;/code&gt; useful command to assess the result of the Helm rendering process before any actual resource creation request is sent to the Kubernetes API. It&amp;rsquo;s a good way to catch syntax errors early.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;.../helm-architecture.png&#34; alt=&#34;&amp;amp;hellip;/helm-architecture.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;values.yaml&lt;/code&gt; file is the main point of contact between the chart and the user. In this file, users are able to specify details that will enable the packaged application to use resources and configuration from a particular environment.&lt;/p&gt;
&lt;p&gt;In the following example, which is only a section in a values file, there are some important things to note:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# commonLabels Add labels to all the deployed resources
commonLabels: {}
# commonAnnotations Add annotations to all the deployed resources
commonAnnotations: {}
configuration:
  database:
    # username Name for user to connect to database as
    username: &amp;lt;replace&amp;gt;
    # password Password to connect to database with
    password: &amp;#34;&amp;#34;
    # host Hostname of database instance
    host: 127.0.0.1
    # port Port to connect to database at
    port: 5432
    # dbname Name of database to use
    dbname: &amp;lt;replace&amp;gt;
    # options Additional client options for connecting to database
    options: sslmode=disable
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Keys like &lt;code&gt;commonLabels&lt;/code&gt; are bare common variables created by Helm and empty by default (that&amp;rsquo;s the meaning of &lt;code&gt;{}&lt;/code&gt;). If you choose to modify them, just remove the &lt;code&gt;{}&lt;/code&gt; and add your preferred configuration:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;commonLabels:
   environment: prod
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;There is a high degree of control for chart authors to control the structure of the chart and it&amp;rsquo;s supporting files, including &lt;code&gt;values.yaml&lt;/code&gt;. Regular YAML syntax rules apply (e.g. indentation) but in the example, the entire &lt;code&gt;configuration&lt;/code&gt; section was defined by chart authors&lt;/li&gt;
&lt;li&gt;When keys have a value of &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt; it means that Helm will overwrite whatever the content of the key is with an empty string. You just need to remove the &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt; and insert the required value.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once the &lt;code&gt;values.yaml&lt;/code&gt; reflects the configuration for your environment, it is time to install:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;helm install web bitnami/wordpress --values values.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example output:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Release &amp;#34;web&amp;#34; has been installed. Happy Helming!
NAME: web
LAST DEPLOYED: Thu May  4 18:12:40 2023
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Notice that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Helm releases are namespaced, except of course for cluster-wide resources like &lt;code&gt;ClusterRole&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;REVISION&lt;/code&gt; is the versioning mechanism Helm uses for releases. Whenever you need to update the configuration of a release (for example, by making a change to a field in &lt;code&gt;values.yaml&lt;/code&gt;) you just need to run a &lt;code&gt;helm upgrade &amp;lt;release-name&amp;gt; &amp;lt;chart-name&amp;gt; --namespace &amp;lt;your-namespace&amp;gt;&lt;/code&gt; and Helm will not only update only the resource(s) that needs to be changed but will update the &lt;code&gt;REVISION&lt;/code&gt; field to the next number in the sequence (up to 10).&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Release &amp;#34;web&amp;#34; has been upgraded. Happy Helming!
NAME: web
LAST DEPLOYED: Thu May  4 18:15:40 2023
NAMESPACE: default
STATUS: deployed
REVISION: 2
TEST SUITE: None
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is helpful if you need to perform a rollback. In such case, you just need to refer to the &lt;code&gt;REVISION&lt;/code&gt; number:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;helm history web
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Example output:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;REVISION    UPDATED                  STATUS     CHART           APP VERSION    DESCRIPTION
1           2023-05-10 10:00:00      deployed   wordpress-1.0.0     1.2.3          Initial release
2           2023-05-12 15:30:00      deployed   wordpress-1.0.1     1.2.4          Updated configuration
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and then:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;helm rollback web 1
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Kubernetes introduced the idea of declarative configuration for infrastructure in a single API. Helm takes the idea up to the application level enabling app developers and platform operators to declare desired state and manage the lifecycle of Kubernetes resources in a way that&amp;rsquo;s portable, versioned and more reliable than wrangling YAMLs for different resources and environments.&lt;/p&gt;
&lt;p&gt;Happy helming!&lt;/p&gt;
</content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
</feed>
